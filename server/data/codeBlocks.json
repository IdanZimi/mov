{
    "blocks": [
      {
        "title": "Bubble Sort",
        "code": "function bubbleSort(arr) {\n  // your code here\n}",
        "solution": "function bubbleSort(arr) {\n  const n = arr.length;\n  for (let i = 0; i < n - 1; i++) {\n    for (let j = 0; j < n - 1 - i; j++) {\n      if (arr[j] > arr[j + 1]) {\n        [arr[j], arr[j + 1]] = [arr[j + 1], arr[j]];\n      }\n    }\n  }\n  return arr;\n}"
      },
      {
        "title": "Fibonacci Sequence",
        "code": "function fibonacci(n) {\n  // your code here\n}",
        "solution": "function fibonacci(n) {\n  if (n <= 0) return [];\n  if (n === 1) return [0];\n  const seq = [0, 1];\n  for (let i = 2; i < n; i++) {\n    seq.push(seq[i - 1] + seq[i - 2]);\n  }\n  return seq;\n}"
      },
      {
        "title": "Debounce Function",
        "code": "function debounce(fn, delay) {\n  // your code here\n}",
        "solution": "function debounce(fn, delay) {\n  let timerId;\n  return function(...args) {\n    clearTimeout(timerId);\n    timerId = setTimeout(() => fn.apply(this, args), delay);\n  };\n}"
      },
      {
        "title": "Even Number Checker",
        "code": "function isEven(n) {\n  // your code here\n}",
        "solution": "function isEven(n) {\n  if (typeof n !== 'number') return false;\n  return n % 2 === 0;\n}"
      },
      {
        "title": "Reverse String",
        "code": "function reverseString(str) {\n  // your code here\n}",
        "solution": "function reverseString(str) {\n  if (typeof str !== 'string') return '';\n  return str.split('').reverse().join('');\n}"
      },
      {
        "title": "Factorial Calculation",
        "code": "function factorial(n) {\n  // your code here\n}",
        "solution": "function factorial(n) {\n  if (typeof n !== 'number' || n < 0) return null;\n  let result = 1;\n  for (let i = 2; i <= n; i++) {\n    result *= i;\n  }\n  return result;\n}"
      },
      {
        "title": "Sum of Array",
        "code": "function sumArray(arr) {\n  // your code here\n}",
        "solution": "function sumArray(arr) {\n  if (!Array.isArray(arr)) return 0;\n  return arr.reduce((sum, n) => sum + (typeof n === 'number' ? n : 0), 0);\n}"
      }
    ]
  }